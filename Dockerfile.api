FROM nvidia/cuda:12.1.1-cudnn8-devel-ubuntu22.04

# Set environment variables for better performance and caching
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    POETRY_VERSION=1.7.1 \
    POETRY_HOME="/opt/poetry" \
    POETRY_VIRTUALENVS_IN_PROJECT=false \
    POETRY_NO_INTERACTION=1 \
    DEBIAN_FRONTEND=noninteractive \
    TRANSFORMERS_CACHE="/app/models/cache" \
    HF_HOME="/app/models/hub" \
    TESSDATA_PREFIX=/usr/share/tesseract-ocr/4.00/tessdata \
    FLAGS_allocator_strategy=naive_best_fit \
    FLAGS_fraction_of_gpu_memory_to_use=0.8

# Install system dependencies (kept in a separate cached layer)
RUN apt-get update && apt-get install -y --no-install-recommends \
    libcudnn8=8.9.2.* \
    libcudnn8-dev=8.9.2.* \
    libcudnn8-samples=8.9.2.* \
    python3.10 \
    python3.10-dev \
    python3-pip \
    python3-venv \
    ffmpeg \
    curl \
    gcc \
    g++ \
    git \
    libgl1-mesa-glx \
    libglib2.0-0 \
    poppler-utils \
    tesseract-ocr \
    ghostscript \
    libtesseract-dev \
    libleptonica-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Alias python to python3.10
RUN ln -sf /usr/bin/python3.10 /usr/bin/python3 && ln -sf /usr/bin/python3 /usr/bin/python

# Install Poetry (kept in a separate cached layer)
RUN curl -sSL https://install.python-poetry.org | python3 -
ENV PATH="${POETRY_HOME}/bin:$PATH"

# Set up working directory
WORKDIR /app

# Copy only the dependency files first (ensures caching of dependencies)
COPY pyproject.toml poetry.lock* ./

# Install dependencies with GPU support (cached layer)
RUN poetry config virtualenvs.create false \
    && poetry install --no-interaction --no-ansi --no-root --no-dev

# Ensure necessary directories exist
RUN mkdir -p /app/data/youtube /app/data/bilibili /app/data/uploads \
    /app/models/cache /app/models/hub \
    /app/models/embeddings /app/models/colbert /app/models/llm /app/models/whisper

# Copy the rest of the application code
COPY . .

# Set up Tesseract and PaddleOCR data directories
ENV TESSDATA_PREFIX=/usr/share/tesseract-ocr/4.00/tessdata
ENV FLAGS_allocator_strategy=naive_best_fit
ENV FLAGS_fraction_of_gpu_memory_to_use=0.8

# Command to run the application
CMD ["uvicorn", "src.api.main:app", "--host", "0.0.0.0", "--port", "8000", "--timeout-keep-alive", "120"]
