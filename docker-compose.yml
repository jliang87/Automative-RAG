version: '3.8'

# Define reusable environment variables
x-common-variables: &common-env
  CONTAINER_RUNTIME: docker
  LOG_LEVEL: INFO
  env_file:
    - .env

services:
  # ðŸ”¹ FastAPI Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    restart: always
    ports:
      - "8000:8000"
    environment:
      <<: *common-env
      QDRANT_HOST: qdrant
      QDRANT_PORT: 6333
      DEVICE: cuda
      USE_FP16: true
      WHISPER_MODEL_SIZE: medium
      USE_YOUTUBE_CAPTIONS: false
      USE_WHISPER_AS_FALLBACK: false
      FORCE_WHISPER: true
      USE_PDF_OCR: true
    volumes:
      - ./data:/app/data
      - ./models:/app/models  # Ensure models persist across builds
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all  # More flexible than `1`
              capabilities: [gpu]
    ulimits:
      memlock: -1
      stack: 67108864
    shm_size: 8gb
    depends_on:
      qdrant:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  # ðŸ”¹ Streamlit UI
  ui:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    restart: always
    ports:
      - "8501:8501"
    environment:
      <<: *common-env
      API_URL: http://api:8000
    volumes:
      - ./data:/app/data
      - ./models:/app/models
    depends_on:
      - api

  # ðŸ”¹ Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-data:/qdrant/storage
    environment:
      QDRANT_ALLOW_CORS: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/readyz"]
      interval: 30s
      timeout: 5s
      retries: 3
    tmpfs:
      - /qdrant/storage  # Reduce disk I/O for better performance
    read_only: true  # Security improvement

volumes:
  qdrant-data:
