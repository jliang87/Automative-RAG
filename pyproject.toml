[tool.poetry]
name = "automotive_rag"
packages = [{ include = "*", from = "src" }] 
version = "0.1.0"
description = "Automotive Specifications RAG System with Local LLM and GPU Acceleration"
authors = ["Your Name <your.email@example.com>"]
readme = "readme.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
langchain = "==0.3.20"
langchain-community = ">=0.3.19,<0.4.0"
langchain-core = "*"
python-jose = "*"
passlib = "*"
pydantic = "*"
pydantic-settings = "*"
fastapi = "*"
uvicorn = {extras = ["standard"], version = "*" }
streamlit = "*"
qdrant-client = "*"
sentence-transformers = "*"
torch = {version = "*", extras = ["cuda"]}
transformers = "*"
pytube = "*"
yt-dlp = "*"  # For Bilibili and enhanced YouTube downloading
python-dotenv = "*"
pytest = "*"
colbert-ai = "*"
pypdf = "*"
faiss-cpu = "*"
tqdm = "*"
ffmpeg-python = "*"
moviepy = "*"
httpx = "*"
python-multipart = "*"
deepseek-ai = "*"
beautifulsoup4 = "*"
tiktoken = "*"
openai-whisper = "*"  # GPU-accelerated transcription
paddlepaddle-gpu = "*"  # GPU-accelerated OCR
paddleocr = "*"  # OCR for PDFs
camelot-py = "*"  # Table extraction from PDFs
opencv-python = "*"  # Required for camelot
ghostscript = "*"  # Required for camelot
pymupdf = "*"  # PDF processing with GPU support
bitsandbytes = "*"
accelerate = "*"

[tool.poetry.group.dev.dependencies]
black = "*"
isort = "*"
flake8 = "*"
pytest = "*"
pytest-cov = "*"
mypy = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
